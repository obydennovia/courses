import random

# генерируем случайное слово из списка
def get_word(word_list):
    return random.choice(word_list).upper()   

# функция получения текущего состояния
def display_hangman(tries):
    stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / \\
                   -
                ''',
                # голова, торс, обе руки, одна нога
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / 
                   -
                ''',
                # голова, торс, обе руки
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |      
                   -
                ''',
                # голова, торс и одна рука
                '''
                   --------
                   |      |
                   |      O
                   |     \\|
                   |      |
                   |     
                   -
                ''',
                # голова и торс
                '''
                   --------
                   |      |
                   |      O
                   |      |
                   |      |
                   |     
                   -
                ''',
                # голова
                '''
                   --------
                   |      |
                   |      O
                   |    
                   |      
                   |     
                   -
                ''',
                # начальное состояние
                '''
                   --------
                   |      |
                   |      
                   |    
                   |      
                   |     
                   -
                '''
    ]
    return stages[tries]

# проверяем ввод - должна быть введена только буква
def valid_letter(letter):
    flag = False
    if (letter.isalpha()):
        if (len(letter) > 1):
            print('Нужно ввести всего одну букву')
    elif (letter.isdigit()):
        print('Зачем цифры? Введите одну букву')
    else:
        print('Что это? Введите одну букву')
    if (letter.isalpha()) and (len(letter) == 1):
        flag = True
    return flag

# проверка на ввод ранее введенной буквы
def repeat_letter(letter, letter_list):
    flag = False
    if letter in letter_list:
        print(f'Вы уже вводили букву {letter}')
    else:
        flag = True
    return flag

# основная логика игры
def play(word):
    word_completion = '_' * len(word)  # строка, содержащая символы _ на каждую букву задуманного слова
    guessed = False                    # сигнальная метка
    guessed_letters = []               # список уже названных букв
    guessed_words = []                 # список уже названных слов
    tries = 6                          # количество попыток
    
    print('Давайте играть в угадайку слов!')
    print(display_hangman(tries))
    print(word_completion)

    print(get_word(word))
    
    # Если пользователь вводит уже названную букву или слово, то необходимо ему об этом сообщить, и не засчитывать попытку;
    # Если пользователь угадал букву, то требуется заменить все символы _ соответствующие этой букве;
    # Если пользователь угадал слово целиком, то следует его поздравить и вывести текст 'Поздравляем, вы угадали слово! Вы победили!';
    # Если пользователь исчерпал все свои попытки и не угадал слово, следует вывести загаданное слово.    

word_list = ['cat', 'dog', 'python']

play(word_list)

s = input()
valid_letter(s)
